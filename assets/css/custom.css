:root{
  --dd-heading-size: clamp(1.8rem, 2.2vw + 1rem, 2.6rem);
  --dd-body-size:    clamp(1.05rem, 0.4vw + 0.95rem, 1.2rem);
  --dd-line-height:  1.8;
  --dd-quote-size:   clamp(1.15rem, 0.6vw + 1rem, 1.35rem);
}

/* label before titles linking to /derj-words/ */
.group-hover-card {
    a[href^="/derj-words/"]::before {
    content: "DERJ WORDS";
    font-size: 11px;
    font-weight: 500;
    letter-spacing: .04em;
    padding: 5px 6px;
    color: var(--color-secondary-600);
    background-color: #ebd15087;
    border: 1px solid var(--color-secondary-200);
    border-radius: 4px;
    margin-right: 8px;
    margin-left: 8px;
    text-transform: uppercase;
    }
} 

/* Responsive YouTube embeds (Blowfish) */
.yt-embed {
  /* center in article column; grow on larger screens */
  margin: 1.5rem auto;
  width: 100%;
  max-width: 680px; /* base size for laptops */
}

.yt-embed iframe {
  width: 100% !important;
  aspect-ratio: 16/9;
  height: auto;
  border: 0;
  border-radius: 1rem;
  box-shadow: 0 6px 24px rgba(0,0,0,.12);
}

/* Scale up progressively on wider viewports */
@media (min-width: 768px)   { .yt-embed { max-width: 800px; } }   /* tablets/landscape */
@media (min-width: 1024px)  { .yt-embed { max-width: 960px; } }   /* desktops */
@media (min-width: 1280px)  { .yt-embed { max-width: 1100px; } }  /* big desktops */

/* Alternative: single-line size rule if you prefer clamp() over breakpoints */
.yt-embed { max-width: clamp(560px, 70vw, 1100px); }

/* Shorts (vertical 9:16) */
.yt-embed--short {
  margin: 1.5rem auto;
  width: 100%;
  max-width: 420px;  /* sane default for vertical video */
}

/* let Shorts get a bit larger on desktop, but cap by viewport height */
@media (min-width: 1024px) { .yt-embed--short { max-width: 520px; } }
@media (min-width: 1280px) { .yt-embed--short { max-width: 600px; } }

.yt-embed--short iframe {
  aspect-ratio: 9/16;
  width: 100% !important;
  height: auto;
  max-height: 85vh; /* never exceed screen height */
}

/* Optional: full-bleed variant when using a wide layout (e.g., layout: "simple") */
.yt-embed--fullbleed {
  width: min(95vw, 1000px);
  max-width: none;
}

/* 2) Headings */
.article-content h1,
.article-content > h2,
.article-content > h3,
.article-content > h4 {
  font-family: "Lalezar", system-ui, -apple-system, "Segoe UI", sans-serif;
  font-weight: 400;              /* Lalezar has 400 only */
  font-size: var(--dd-heading-size);
  line-height: 1.2;
  margin: 1.2em 0 .6em;
}

/* 3) Body text */
.article-content > p,
.article-content > ul,
.article-content > ol {
  font-family: "Zain", system-ui, -apple-system, "Segoe UI", sans-serif;
  font-weight: 400;
  font-size: var(--dd-body-size);
  line-height: var(--dd-line-height);
  text-wrap: pretty;
}

/* 4) Blockquotes (RTL-safe border) */
.article-content > blockquote {
  font-family: "Zain", system-ui, -apple-system, "Segoe UI", sans-serif;
  font-weight: 400;
  font-style: italic;
  font-size: var(--dd-quote-size);
  line-height: var(--dd-line-height);
  padding-inline-start: 1rem;
  margin: 1.2rem 0;
  color: var(--color-text-400); 
}

/* 5) Language-aware direction (applies to Arabic spans/blocks only) */
.article-content :lang(ar) {
  direction: rtl;
  unicode-bidi: isolate;
  text-align: start;
  /* Arabic usually benefits from a touch more line-height */
  line-height: calc(var(--dd-line-height) + 0.05);
}

/* 6) Optional: keep browsers from faking weights/styles on display fonts */
.article-content { font-synthesis-weight: auto; }
.article-content :lang(ar) { font-synthesis-style: none; } /* Zain has real italics; Lalezar does not */

/* 7) If you still want your weight utility classes, keep just these: */
.zain-200{ font-family:"Zain",sans-serif; font-weight:200; }
.zain-300{ font-family:"Zain",sans-serif; font-weight:300; }
.zain-400{ font-family:"Zain",sans-serif; font-weight:400; }
.zain-700{ font-family:"Zain",sans-serif; font-weight:700; }
.zain-800{ font-family:"Zain",sans-serif; font-weight:800; }
.zain-900{ font-family:"Zain",sans-serif; font-weight:900; }
.lalezar { font-family:"Lalezar",sans-serif; font-weight:400; }



/* Force hand cursor on real links everywhere, even inside rich text */
a[href] { cursor: pointer; }
a[href] * { cursor: inherit; }  /* children inside links keep the hand */

/* If you use “stretched link”/overlay patterns, include the pseudo-element */
a[href].stretched-link, a[href].stretched-link::after { cursor: pointer; }

/* Optional: make buttons show hand too, if you want that look */
button, [role="button"] { cursor: pointer; }

